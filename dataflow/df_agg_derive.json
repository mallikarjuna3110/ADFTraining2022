{
	"name": "df_agg_derive",
	"properties": {
		"description": "data flow is create to learn aggeregate activity",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MOVIES_DS1",
						"type": "DatasetReference"
					},
					"name": "moviesV1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MOVIESOPCSV",
						"type": "DatasetReference"
					},
					"name": "moviesclean",
					"rejectedDataLinkedService": {
						"referenceName": "ls_blob_training229",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "MOVIESOPCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesCountByYear"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "ratingbyyear"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> moviesV1",
				"moviesV1 derive(year = toInteger(trim(right(title,6),'()')),",
				"          title = toString(left(title,length(title)-6))) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(year),",
				"     Moviescount = count(year)) ~> ratingbyyear",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesclean.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> moviesclean",
				"ratingbyyear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Moviecountbyyear'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesCountByYear"
			]
		}
	}
}